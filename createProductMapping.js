// Create Product Mappings between Ecommerce and SendPulse
import { DatabaseService } from './src/services/databaseService.js';
import dotenv from 'dotenv';

dotenv.config();

async function createProductMappings() {
  console.log('üîó Creating Product Mappings');
  console.log('============================\n');

  const dbService = new DatabaseService();

  try {
    // –ú–∞–ø–ø–∏–Ω–≥–∏ –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞ –∞–Ω–∞–ª–∏–∑–µ –Ω–∞–∑–≤–∞–Ω–∏–π –∏ —Ü–µ–Ω
    const mappings = [
      {
        ecommerceId: 3,
        ecommerceName: "–°–ò–† –ö–ò–°–õ–û–ú–û–õ–û–ß–ù–ò–ô (–¢–í–û–†–û–ì)",
        ecommercePrice: 10,
        sendpulseId: 6317,
        sendpulseName: "–°–∏—Ä –∫–∏—Å–ª–æ–º–æ–ª–æ—á–Ω–∏–π 15,5% ‚Äì 500 –≥ ‚Äì –ø–ª–∞—Å—Ç–∏–∫",
        sendpulsePrice: 10,
        confidence: "high" // –¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∏ —Ü–µ–Ω—ã
      },
      {
        ecommerceId: 5,
        ecommerceName: "–ü–ï–õ–¨–ú–ï–ù–Ü",
        ecommercePrice: 35,
        sendpulseId: 6319,
        sendpulseName: "–ü–µ–ª—å–º–µ–Ω—ñ –∫–ª–∞—Å–∏—á–Ω—ñ (–∑—ñ —Å–≤–∏–Ω–∏–Ω–æ—é —Ç–∞ —è–ª–æ–≤–∏—á–∏–Ω–æ—é) ‚Äì 1000 –≥ ‚Äì –∑–∏–ø–ª–æ–∫",
        sendpulsePrice: 35,
        confidence: "high"
      },
      {
        ecommerceId: 7,
        ecommerceName: "–í–ê–†–ï–ù–ò–ö–ò –∑ –≤–∏—à–Ω–µ—é",
        ecommercePrice: 35,
        sendpulseId: 6322,
        sendpulseName: "–í–∞—Ä–µ–Ω–∏–∫–∏ –∑ –≤–∏—à–Ω–µ—é ‚Äì 1000 –≥ ‚Äì –∑–∏–ø–ª–æ–∫",
        sendpulsePrice: 35,
        confidence: "high"
      },
      {
        ecommerceId: 9,
        ecommerceName: "–ì–û–õ–£–ë–¶–Ü",
        ecommercePrice: 35,
        sendpulseId: 6323,
        sendpulseName: "–ì–æ–ª—É–±—Ü—ñ –∫–ª–∞—Å–∏—á–Ω—ñ (–∑—ñ —Å–≤–∏–Ω–∏–Ω–æ—é —Ç–∞ —è–ª–æ–≤–∏—á–∏–Ω–æ—é) ‚Äì 1000 –≥ ‚Äì –∑–∏–ø–ª–æ–∫",
        sendpulsePrice: 35,
        confidence: "high"
      },
      {
        ecommerceId: 11,
        ecommerceName: "–°–ò–†–ù–ê –ú–ê–°–ê –≤–∞–Ω—ñ–ª—å–Ω–∞",
        ecommercePrice: 10,
        sendpulseId: 6321,
        sendpulseName: "–°–∏—Ä–∫–æ–≤–∞ –º–∞—Å–∞ –≤–∞–Ω—ñ–ª—å–Ω–∞ ‚Äì 300 –≥ ‚Äì –ø–ª–∞—Å—Ç–∏–∫",
        sendpulsePrice: 10,
        confidence: "high"
      },
      {
        ecommerceId: 12,
        ecommerceName: "–°–ò–†–ö–ò —É –º–æ–ª–æ—á–Ω–æ–º—É —à–æ–∫–æ–ª–∞–¥—ñ",
        ecommercePrice: 20,
        sendpulseId: 6320,
        sendpulseName: "–°–∏—Ä–æ–∫ –≤–∞–Ω—ñ–ª—å–Ω–∏–π ‚Äì –º–æ–ª–æ—á–Ω–∏–π —à–æ–∫–æ–ª–∞–¥ ‚Äì 4√ó90 –≥ ‚Äì –ø–ª–∞—Å—Ç–∏–∫",
        sendpulsePrice: 20,
        confidence: "medium" // –ü–æ—Ö–æ–∂–∏–µ, –Ω–æ –Ω–µ —Ç–æ—á–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è
      },
      {
        ecommerceId: 4,
        ecommerceName: "–°–ò–†–ö–ò —É —á–æ—Ä–Ω–æ–º—É —à–æ–∫–æ–ª–∞–¥—ñ",
        ecommercePrice: 20,
        sendpulseId: 6316,
        sendpulseName: "–°–∏—Ä –∫–∏—Å–ª–æ–º–æ–ª–æ—á–Ω–∏–π 15,5% ‚Äì 1 –∫–≥ ‚Äì –ø–ª–∞—Å—Ç–∏–∫",
        sendpulsePrice: 20,
        confidence: "low" // –¶–µ–Ω–∞ —Å–æ–≤–ø–∞–¥–∞–µ—Ç, –Ω–æ –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–∞–∑–Ω—ã–µ - —Ç—Ä–µ–±—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
      }
    ];

    console.log('–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã–µ –º–∞–ø–ø–∏–Ω–≥–∏:');
    console.log('=====================\n');

    mappings.forEach((mapping, index) => {
      const confidenceEmoji = mapping.confidence === 'high' ? 'üü¢' : 
                             mapping.confidence === 'medium' ? 'üü°' : 'üî¥';
      
      console.log(`${index + 1}. ${confidenceEmoji} Confidence: ${mapping.confidence.toUpperCase()}`);
      console.log(`   Ecommerce: ID ${mapping.ecommerceId} - "${mapping.ecommerceName}" (${mapping.ecommercePrice} CHF)`);
      console.log(`   SendPulse: ID ${mapping.sendpulseId} - "${mapping.sendpulseName}" (${mapping.sendpulsePrice} CHF)`);
      console.log('');
    });

    console.log('–¢–æ–≤–∞—Ä—ã –±–µ–∑ –º–∞–ø–ø–∏–Ω–≥–∞:');
    console.log('===================');
    console.log('Ecommerce —Ç–æ–≤–∞—Ä—ã –±–µ–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π:');
    console.log('- ID 6: "–°–ò–†–ù–ò–ö–ò" (20 CHF)');
    console.log('- ID 15: "–í–ê–†–ï–ù–ò–ö–ò –∑ —Å–∏—Ä–æ–º (—Å–æ–ª–æ–¥–∫—ñ)" (35 CHF)');
    console.log('- ID 22: "–í–ê–†–ï–ù–ò–ö–ò –∑ –∫–∞–ø—É—Å—Ç–æ—é" (35 CHF)');
    console.log('');

    // –°–æ–∑–¥–∞–Ω–∏–µ –º–∞–ø–ø–∏–Ω–≥–æ–≤
    console.log('–°–æ–∑–¥–∞–Ω–∏–µ –º–∞–ø–ø–∏–Ω–≥–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    console.log('=================================\n');

    let successCount = 0;
    let skipCount = 0;

    for (const mapping of mappings) {
      try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –º–∞–ø–ø–∏–Ω–≥
        const existingMapping = await dbService.getProductMapping(mapping.ecommerceId);
        
        if (existingMapping) {
          console.log(`‚ö†Ô∏è  –ú–∞–ø–ø–∏–Ω–≥ –¥–ª—è —Ç–æ–≤–∞—Ä–∞ ${mapping.ecommerceId} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (SendPulse ID: ${existingMapping.sendpulseId})`);
          skipCount++;
          continue;
        }

        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –º–∞–ø–ø–∏–Ω–≥
        const result = await dbService.saveProductMapping(
          mapping.ecommerceId,
          mapping.sendpulseId,
          mapping.ecommerceName
        );

        console.log(`‚úÖ –°–æ–∑–¥–∞–Ω –º–∞–ø–ø–∏–Ω–≥: ${mapping.ecommerceId} ‚Üí ${mapping.sendpulseId} (${mapping.confidence} confidence)`);
        successCount++;

      } catch (error) {
        console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–∞–ø–ø–∏–Ω–≥–∞ –¥–ª—è —Ç–æ–≤–∞—Ä–∞ ${mapping.ecommerceId}: ${error.message}`);
      }
    }

    console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç:`);
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ: ${successCount} –º–∞–ø–ø–∏–Ω–≥–æ–≤`);
    console.log(`‚ö†Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω–æ: ${skipCount} (—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç)`);
    console.log(`‚ùå –û—à–∏–±–æ–∫: ${mappings.length - successCount - skipCount}`);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –º–∞–ø–ø–∏–Ω–≥–∏
    console.log('\nüîç –í—Å–µ –º–∞–ø–ø–∏–Ω–≥–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:');
    const allMappings = await dbService.getAllProductMappings();
    
    allMappings.forEach(mapping => {
      const originalMapping = mappings.find(m => m.ecommerceId === mapping.ecommerceId);
      const confidence = originalMapping ? originalMapping.confidence : 'unknown';
      const confidenceEmoji = confidence === 'high' ? 'üü¢' : 
                             confidence === 'medium' ? 'üü°' : 
                             confidence === 'low' ? 'üî¥' : '‚ö™';
      
      console.log(`${confidenceEmoji} Ecommerce ID ${mapping.ecommerceId} ‚Üí SendPulse ID ${mapping.sendpulseId}`);
      console.log(`   Name: "${mapping.name || 'Unknown'}"`);
      console.log(`   Status: ${mapping.syncStatus}, Last sync: ${mapping.lastSyncAt?.toISOString() || 'Never'}`);
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–∞–ø–ø–∏–Ω–≥–æ–≤:', error.message);
  } finally {
    await dbService.disconnect();
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–¥–Ω–æ–≥–æ –º–∞–ø–ø–∏–Ω–≥–∞ –≤—Ä—É—á–Ω—É—é
async function createSingleMapping(ecommerceId, sendpulseId, name) {
  console.log(`üîó –°–æ–∑–¥–∞–Ω–∏–µ –º–∞–ø–ø–∏–Ω–≥–∞: ${ecommerceId} ‚Üí ${sendpulseId}`);
  
  const dbService = new DatabaseService();
  
  try {
    const result = await dbService.saveProductMapping(ecommerceId, sendpulseId, name);
    console.log('‚úÖ –ú–∞–ø–ø–∏–Ω–≥ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ:', result);
    return result;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–∞–ø–ø–∏–Ω–≥–∞:', error.message);
    throw error;
  } finally {
    await dbService.disconnect();
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –º–∞–ø–ø–∏–Ω–≥–∞
async function deleteMappingIfNeeded(ecommerceId) {
  console.log(`üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ –º–∞–ø–ø–∏–Ω–≥–∞ –¥–ª—è —Ç–æ–≤–∞—Ä–∞ ${ecommerceId}`);
  
  const dbService = new DatabaseService();
  
  try {
    // –ü–æ—Å–∫–æ–ª—å–∫—É —É –Ω–∞—Å –Ω–µ—Ç –º–µ—Ç–æ–¥–∞ —É–¥–∞–ª–µ–Ω–∏—è, –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π
    const mapping = await dbService.getProductMapping(ecommerceId);
    if (mapping) {
      console.log('–°—É—â–µ—Å—Ç–≤—É—é—â–∏–π –º–∞–ø–ø–∏–Ω–≥:', mapping);
      console.log('–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–∏—Ç–µ SQL: DELETE FROM product_mappings WHERE ecommerce_id = ' + ecommerceId);
    } else {
      console.log('–ú–∞–ø–ø–∏–Ω–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  } finally {
    await dbService.disconnect();
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞–ø–ø–∏–Ω–≥–æ–≤
async function verifyMappings() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞–ø–ø–∏–Ω–≥–æ–≤');
  console.log('====================\n');

  const dbService = new DatabaseService();
  
  try {
    const productsWithMappings = await dbService.getProductsWithMappings();
    
    console.log('–¢–æ–≤–∞—Ä—ã —Å –º–∞–ø–ø–∏–Ω–≥–∞–º–∏:');
    productsWithMappings
      .filter(p => p.isSyncedToSendPulse)
      .forEach(product => {
        console.log(`‚úÖ ID ${product.id}: "${product.name}" ‚Üí SendPulse ID ${product.sendpulseId}`);
      });

    console.log('\n–¢–æ–≤–∞—Ä—ã –±–µ–∑ –º–∞–ø–ø–∏–Ω–≥–æ–≤:');
    productsWithMappings
      .filter(p => !p.isSyncedToSendPulse)
      .forEach(product => {
        console.log(`‚ùå ID ${product.id}: "${product.name}" (${product.price} CHF) - –ù–ï –ó–ê–ú–ê–ü–õ–ï–ù`);
      });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ:', error.message);
  } finally {
    await dbService.disconnect();
  }
}

// –ö–æ–º–∞–Ω–¥—ã
const command = process.argv[2];

switch (command) {
  case '--create':
    createProductMappings().catch(console.error);
    break;
  case '--verify':
    verifyMappings().catch(console.error);
    break;
  case '--delete':
    const ecommerceId = parseInt(process.argv[3]);
    if (ecommerceId) {
      deleteMappingIfNeeded(ecommerceId).catch(console.error);
    } else {
      console.log('Usage: node createProductMapping.js --delete <ecommerce_id>');
    }
    break;
  case '--single':
    const eId = parseInt(process.argv[3]);
    const sId = parseInt(process.argv[4]);
    const name = process.argv[5];
    if (eId && sId) {
      createSingleMapping(eId, sId, name).catch(console.error);
    } else {
      console.log('Usage: node createProductMapping.js --single <ecommerce_id> <sendpulse_id> <name>');
    }
    break;
  default:
    console.log('Product Mapping Commands:');
    console.log('========================');
    console.log('node createProductMapping.js --create   # –°–æ–∑–¥–∞—Ç—å –≤—Å–µ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã–µ –º–∞–ø–ø–∏–Ω–≥–∏');
    console.log('node createProductMapping.js --verify   # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –º–∞–ø–ø–∏–Ω–≥–∏');
    console.log('node createProductMapping.js --single 3 6317 "Product Name"  # –°–æ–∑–¥–∞—Ç—å –æ–¥–∏–Ω –º–∞–ø–ø–∏–Ω–≥');
    console.log('node createProductMapping.js --delete 3  # –ü–æ–∫–∞–∑–∞—Ç—å –∫–∞–∫ —É–¥–∞–ª–∏—Ç—å –º–∞–ø–ø–∏–Ω–≥');
}

export { createProductMappings, createSingleMapping, verifyMappings };