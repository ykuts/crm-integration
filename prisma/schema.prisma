// Prisma Schema for CRM Integration Database
generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("CRM_DATABASE_URL")
}

// Bot Orders Table - stores orders from chat bots
model BotOrder {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now()) @map("created_at")
  updated_at DateTime @updatedAt @map("updated_at")

  // Bot order identification
  bot_order_id String @unique @map("bot_order_id")
  source       String
  chat_id      String @map("chat_id")

  // Customer information
  customer_phone String @map("customer_phone")
  customer_name  String @map("customer_name")
  customer_email String? @map("customer_email")

  // Order details
  products      String // JSON string of products array
  delivery_info String @map("delivery_info") // JSON string of delivery information
  payment_method String @map("payment_method")
  total_amount  Float @map("total_amount")
  
  // Order status and tracking
  status String @default("PENDING")
  notes  String?

  // SendPulse integration
  sendpulse_deal_id    String? @map("sendpulse_deal_id")
  sendpulse_contact_id String? @map("sendpulse_contact_id")

  // Additional metadata
  metadata String @default("{}")

  @@map("bot_orders")
  @@index([bot_order_id])
  @@index([source])
  @@index([customer_phone])
  @@index([status])
  @@index([created_at])
}

// Product Mapping Table - maps ecommerce products to SendPulse products
model ProductMapping {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now()) @map("created_at")
  updated_at DateTime @updatedAt @map("updated_at")

  // Mapping information
  ecommerce_id  Int    @unique @map("ecommerce_id")
  sendpulse_id  Int    @map("sendpulse_id")
  name         String
  
  // Optional sync information
  last_sync_at DateTime? @map("last_sync_at")
  sync_status  String @default("ACTIVE") @map("sync_status")

  @@map("product_mappings")
  @@index([ecommerce_id])
  @@index([sendpulse_id])
}

// Customer Mapping Table - maps ecommerce customers to SendPulse contacts
model CustomerMapping {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now()) @map("created_at")
  updated_at DateTime @updatedAt @map("updated_at")

  // Customer identification
  ecommerce_id    Int?    @map("ecommerce_id")
  phone          String  @unique
  email          String?
  
  // SendPulse information
  sendpulse_id    String  @map("sendpulse_id")
  first_name      String @map("first_name")
  last_name       String @map("last_name")
  
  // Sync information
  last_sync_at     DateTime? @map("last_sync_at")
  sync_status     String @default("ACTIVE") @map("sync_status")

  @@map("customer_mappings")
  @@index([phone])
  @@index([email])
  @@index([sendpulse_id])
}

// Sync Jobs Table - tracks synchronization jobs
model SyncJob {
  id          Int      @id @default(autoincrement())
  created_at  DateTime @default(now()) @map("created_at")
  updated_at  DateTime @updatedAt @map("updated_at")
  started_at  DateTime? @map("started_at")
  completed_at DateTime? @map("completed_at")

  // Job information
  job_type     String   @map("job_type")
  status      String   @default("PENDING")
  
  // Results
  items_processed Int @default(0) @map("items_processed")
  items_success   Int @default(0) @map("items_success")
  items_error     Int @default(0) @map("items_error")
  
  // Error information
  error_message String? @map("error_message")
  error_details String? @map("error_details")
  
  // Configuration
  config       String @default("{}")

  @@map("sync_jobs")
  @@index([job_type])
  @@index([status])
  @@index([created_at])
}

// Webhook Events Table - logs incoming webhooks
model WebhookEvent {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now()) @map("created_at")

  // Webhook information
  source     String
  event_type String   @map("event_type")
  event_id   String?  @map("event_id")
  
  // Request details
  headers   String
  payload   String
  
  // Processing status
  processed    Boolean @default(false)
  processed_at  DateTime? @map("processed_at")
  error_message String? @map("error_message")

  @@map("webhook_events")
  @@index([source])
  @@index([event_type])
  @@index([processed])
  @@index([created_at])
}

// API Logs Table - logs important API calls for debugging
model ApiLog {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now()) @map("created_at")

  // Request information
  method      String
  endpoint    String
  status_code Int @map("status_code")
  
  // User information
  user_type   String?  @map("user_type")
  user_id     String?  @map("user_id")
  user_agent  String?  @map("user_agent")
  ip_address  String?  @map("ip_address")
  
  // Timing
  response_time Int? @map("response_time")
  
  // Additional context
  context       String @default("{}")
  error_message String? @map("error_message")

  @@map("api_logs")
  @@index([endpoint])
  @@index([status_code])
  @@index([user_type])
  @@index([created_at])
}